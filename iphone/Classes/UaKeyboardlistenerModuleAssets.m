/**
 * This is a generated file. Do not edit or your changes will be lost
 */
#import "UaKeyboardlistenerModuleAssets.h"

extern NSData* filterDataInRange(NSData* thedata, NSRange range);

@implementation UaKeyboardlistenerModuleAssets

- (NSData*) moduleAsset
{
	//##TI_AUTOGEN_BEGIN asset

	static UInt8 data[] = {
		0x82,0x7c,0xd8,0x34,0xab,0x88,0xc7,0x09,0xe3,0x53,0xf6,0x28,0x58,0x58,0xa9,0x0f,0xfd,0x07,0x00,0x5b
		,0xa4,0x0d,0x9b,0xa6,0x2f,0x32,0xc0,0x6d,0x6b,0xff,0x94,0xb6,0x39,0x43,0xd9,0xd0,0xcd,0x47,0x29,0xf9
		,0xac,0x14,0xbb,0x40,0x96,0xf7,0x41,0x17,0x18,0xd1,0x45,0xd2,0x1b,0xac,0x29,0xf7,0x2e,0xcd,0xd2,0xe2
		,0x28,0x67,0xfc,0x9b,0xe0,0xea,0x41,0x61,0xff,0xf5,0x35,0x9d,0xba,0x79,0x3a,0x74,0x91,0x42,0xd1,0x38
		,0x40,0x14,0x81,0xaf,0x39,0x65,0x6a,0xd5,0x47,0x46,0xbb,0x32,0x3d,0x68,0xb5,0xde	};
	static NSRange ranges[] = {
		{0,64}
	};
	static NSDictionary *map = nil;
	if (map == nil) {
		map = [[NSDictionary alloc] initWithObjectsAndKeys:
		[NSNumber numberWithInteger:0], @"ua_keyboardlistener_js",
		nil];
	}


	return filterDataInRange([NSData dataWithBytesNoCopy:data length:sizeof(data) freeWhenDone:NO], ranges[0]);
//##TI_AUTOGEN_END asset
}

- (NSData*) resolveModuleAsset:(NSString*)path
{
	//##TI_AUTOGEN_BEGIN resolve_asset

	static UInt8 data[] = {
		0xed,0xce,0x63,0x12,0x8f,0xe9,0x0f,0xf2,0x8f,0x80,0x59,0xc3,0x35,0x27,0x48,0x17,0x88,0xc2,0x15,0x94
		,0xe6,0x6d,0xf7,0x48,0x1e,0xf3,0x0f,0x6b,0xde,0x0a,0x81,0x5d,0x70,0xad,0x51,0x62,0x75,0xf9,0xd1,0x80
		,0x58,0x89,0x89,0x2c,0x0a,0x6d,0x30,0xbb,0x11,0x9e,0x4a,0x1f,0xb6,0x85,0x89,0xde,0x4f,0x49,0x1c,0x95
		,0x09,0x6a,0x9e,0x36,0xf3,0x6e,0x78,0x64,0x62,0x65,0x06,0x2e,0xc4,0x58,0xea,0x44,0x20,0x7c,0x45,0xfb
		,0xb4,0x09,0x63,0xaf,0xf8,0xd7,0x17,0x01,0xec,0x85,0xf6,0xb6,0xd4,0xb1,0xf9,0x22	};
	static NSRange ranges[] = {
		{0,64}
	};
	static NSDictionary *map = nil;
	if (map == nil) {
		map = [[NSDictionary alloc] initWithObjectsAndKeys:
		[NSNumber numberWithInteger:0], @"ua_keyboardlistener_js",
		nil];
	}


	NSNumber *index = [map objectForKey:path];
	if (index == nil) {
		return nil;
	}
	return filterDataInRange([NSData dataWithBytesNoCopy:data length:sizeof(data) freeWhenDone:NO], ranges[index.integerValue]);
//##TI_AUTOGEN_END resolve_asset
}

@end
